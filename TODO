Easy
  Convergence diagnostics
    Export MCMC.jl functions?
    Add trace plot, and histogram to MCMC.jl?
  GC improvements
    Do not have Vector{Union(RV, WeakRef)}.  Instead, have Union(Vector{RV}, Vector{WeakRef}).

Harder
Subtle sampling bugs:
  Memoized things take only samples (adding additional samples is liable break continuous samplers)
  Check what happens when val_true depends on condition in @If.

Automatic differentiation.
  Use Calculus.jl as a base.
  Define a memoized function: d(f::Function, arg::Int)
                              d(f::Function, arg::Symbol)
  Remember @differentiable function definitions.
    warn if use finite diffs.

Samplers
  Use MCMC.jl.
  Interface for to add new samplers - add_sampler()
  Automatic differentiation sans det/getindex?


Optimization:
  Collapse deterministic functions?
  Dynamic dependency graph?
    Every node has:
      static_deps
      dynamic_deps

Extend libraries:
  Vectors:
    IID(dist, dims)
    Joint(dist1, dist2...)
    Joint(dists)
